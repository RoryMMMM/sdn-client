openapi: 3.0.1
info:
  title: SeadataNet API
  description: A detailed description of the operation.
  # replaced "use" with "x-use". "use" is not allowed in the info object: https://swagger.io/specification/#info-object
  x-use: markdown for rich text representation, such as **bold**, *italic*, and [links](https://swagger.io).
  version: 5.1.0
  contact:
    name: Administrator at Maris
    email: info@maris.nl
servers:
  - url: https://seadatanet-buffer5.maris.nl/api_v5.1/
    description: Production Server version 5.1
tags:
  - name: Security
  - name: Info
  - name: Orders
components:
  schemas:
    ErrorsReturn:
      xml:
        name: ErrorsReturn
      type: object
      properties:
        errorNumber:
          type: integer
          description: The number of the error
        errorMessage:
          type: string
          description: A short description of the error
    Login:
      type: object
      properties:
        username:
          type: string
        password:
          type: string
      xml:
        name: Login
    OrderListReturn:
      xml:
        name: OrderlistReturn
      type: object
      properties:
        orders:
          type: array
          items:
            properties:
              OrderNumber:
                type: object
                properties:
                  OrderNumber:
                    type: integer
                  DateCreated:
                    type: string
                  DateLastupdated:
                    type: string
                  UserOrderName:
                    type: string
                  orderLines:
                    type: integer
                  orderLinesProcessing:
                    type: integer
                  orderLinesReadyForDownload:
                    type: integer
    OrderDetailsReturn:
      xml:
        name: OrderDetailsReturn
      type: object
      properties:
        OrderNumber:
          type: integer
        DateCreated:
          type: string
        DateLastupdated:
          type: string
        UserOrderName:
          type: string
        orderLines:
          type: integer
        orderLinesProcessing:
          type: integer
        orderLinesReadyForDownload:
          type: integer
        download:
          type: object
          properties:
            data:
              type: object
              properties:
                unrestricted:
                  type: object
                  properties:
                    name:
                      type: string
                    downloadUrl:
                      type: string
                    filesize:
                      type: integer
                restricted:
                  type: object
                  properties:
                    name:
                      type: string
                    downloadUrl:
                      type: string
                    filesize:
                      type: integer
            csv:
              type: object
              properties:
                downloadUrl:
                  type: string
                filesize:
                  type: integer
    OrderQuery:
      xml:
        name: OrderQuery
      type: object
      required: [data_format_L24,motivation]
      properties:
        user_order_name:
          type: string
          description: your name of this order
        motivation:
          type: string
          maxLength: 500
        data_format_L24:
          type: string
          maxLength: 10
          items:
            type: string
            # Changed "enum_single" to "enum": Item not array so enum single implied. 
            enum:
              - odv
              - bodv 
        query_fields:
          xml:
            name: QueryFields
          type: object
          properties:
            free_search:
              type: string
              description: 'Search on any text field by entering text string. Boolean search is enabled e.g.: navstar AND (magnetometer OR gravimeter)'
              example: water
            start_date:
              type: string
              pattern: ^\d{4}(0[1-9]|1[012])(0[1-9]|[12][0-9]|3[01])$
              description: Custom date [[[yyyy]mm]dd]
              example: '20100827'
            end_date:
              type: string
              pattern: ^\d{4}(0[1-9]|1[012])(0[1-9]|[12][0-9]|3[01])$
              description: Custom date [[[yyyy]mm]dd]
              example: '20100827'
            north:
              type: number
              format: float
              example: 53.895
              minimum: -90
              maximum: 90
              description: Latitude (dd.dd) from 90 to -90
            east:
              type: number
              format: float
              example: 6.925
              minimum: -180
              maximum: 180
              description: Longitude (ddd.dd) from 180 to -180
            south:
              type: number
              format: float
              example: 50.708
              minimum: -90
              maximum: 90
              description: Latitude (dd.dd) from 90 to -90
            west:
              type: number
              format: float
              example: 0.755
              minimum: -180
              maximum: 180
              description: Longitude (ddd.dd) from 180 to -180
            inside:
              type: integer
              description: if you want to search inside the bbox or not 0 = normal; 1 = inside)
              default: '1'
            author_edmo:
              type: integer
              description: Only one value is possble, See [reference list autor_edmo](https://seadatanet-buffer5.maris.nl/api_v5.1/reference_list/author_edmo)
              example: 634
            author_edmo_country:
              type: integer
              description: Only one value is possble, See [reference list author_edmo_country](https://seadatanet-buffer5.maris.nl/api_v5.1/reference_list/author_edmo_country)
              example: 24
            originator_edmo:
              type: string
              description: if multiple options then use comma seperated values, See [reference list originator_edmo](https://seadatanet-buffer5.maris.nl/api_v5.1/reference_list/originator_edmo)
              example: '634'
            measuring_area_type_l02:
              type: string
              description: Only one value is possble, See [reference list measuring_area_type_L02](https://seadatanet-buffer5.maris.nl/api_v5.1/reference_list/measuring_area_type_l02)
              items:
                type: string
                enum:
                  - '3'
                  - '4'
                  - '6'
            parameters_p02:
              type: string
              description: if multiple options then use comma seperated values, See [reference list parameters_P02](https://seadatanet-buffer5.maris.nl/api_v5.1/reference_list/parameters_p02)
              example: aslv
            parameters_p03:
              type: string
              description: if multiple options then use comma seperated values, See [reference list parameters_P03](https://seadatanet-buffer5.maris.nl/api_v5.1/reference_list/parameters_p03)
              example: c045
            parameters_p08:
              type: string
              description: if multiple options then use comma seperated values, See [reference list parameters_p08](https://seadatanet-buffer5.maris.nl/api_v5.1/reference_list/parameters_p08)
              example: ds04
            custodium_edmo:
              type: string
              description: if multiple options then use comma seperated values, See [reference list custodium_edmo](https://seadatanet-buffer5.maris.nl/api_v5.1/reference_list/custodium_edmo)
              example: '634'
            distributor_edmo:
              type: string
              description: if multiple options then use comma seperated values, See [reference list distributor_edmo](https://seadatanet-buffer5.maris.nl/api_v5.1/reference_list/distributor_edmo)
              example: '634'
    OrderQueryReturn:
      xml:
        name: OrderQueryReturn
      type: object
      properties:
        NumberOfHitsFromQuery:
          type: integer
          description: The number of records found using the query
        orderNumber:
          type: integer
          description: The unique number of the order, that was created
        orderNumberLines:
          type: integer
          description: The number of order lines that was created
        warnings:
          xml:
            name: Warnings
          type: object
          properties:
            warningNumber:
              type: integer
              description: The number of the warning
            warningMessage:
              type: string
              description: A short description of the warning
    MetadataQuery:
      xml:
        name: MetadataQuery
      type: object
      properties:
        facet_fields:
          type: string
          description: if multiple options then use comma seperated values, See [reference list facet_fields](https://seadatanet-buffer5.maris.nl/api_v5.1/reference_list/facet_fields)
          default: parameters_p08,parameters_p03,parameters_p02
          items:
            type: string
            enum:
              - measuring_area_type_l02
              - parameters_p02
              - parameters_p03
              - parameters_p08
              - author_edmo
              - author_edmo_country
              - originator_edmo
              - custodium_edmo
              - distributor_edmo
        return_fields:
          type: string
          description: if multiple options then use comma seperated values, See [reference list return_fields](https://seadatanet-buffer5.maris.nl/api_v5.1/reference_list/return_fields)
          default: n_code,dataname,cdi_identifier,c_originator_edmo_country,start_date,end_date,c_instrument_l05,version,data_format_l24,bbox_north,bbox_east,bbox_south,bbox_west,c_measuring_area_type_l02
          items:
            type: string
            enum:
              - n_code
              - last_update
              - dataname
              - cdi_identifier
              - c_originator_edmo_country
              - start_date
              - end_date
              - c_instrument_l05
              - version
              - data_format_l24
              - bbox_north
              - bbox_east
              - bbox_south
              - bbox_west
              - c_measuring_area_type_l02
        pagination_page:
          type: integer
          description: Number of records to return
          minimum: 0
          maximum: 1000
          default: 20
        pagination_count:
          type: integer
          description: Number to start from, never larger then records found
          minimum: 0
          default: 0
        pagination_sort:
          type: string
          description: Field used for sorting the response, only one value is allowed, See [reference list pagination_sort](https://seadatanet-buffer5.maris.nl/api_v5.1/reference_list/pagination_sort)
          default: n_code
          items:
            type: string
            enum:
              - n_code
              - last_update
              - dataname
              - cdi_identifier
              - c_originator_edmo_country
              - start_date
              - end_date
              - c_instrument_l05
              - version
              - data_format_l24
              - bbox_north
              - bbox_east
              - bbox_south
              - bbox_west
              - c_measuring_area_type_l02
        pagination_sort_type:
          type: string
          description: Field use for sorting the response, only one value is allowed
          items:
            type: string
            enum:
              - asc
              - desc
          default: asc
        query_fields:
          xml:
            name: QueryFields
          type: object
          properties:
            free_search:
              type: string
              description: 'Search on any text field by entering text string. Boolean search is enabled e.g.: navstar AND (magnetometer OR gravimeter)'
              example: water
            start_date:
              type: string
              pattern: ^\d{4}(0[1-9]|1[012])(0[1-9]|[12][0-9]|3[01])$
              description: Custom date [[[yyyy]mm]dd]
              example: '20100827'
            end_date:
              type: string
              pattern: ^\d{4}(0[1-9]|1[012])(0[1-9]|[12][0-9]|3[01])$
              description: Custom date [[[yyyy]mm]dd]
              example: '20100827'
            north:
              type: number
              format: float
              example: 53.895
              minimum: -90
              maximum: 90
              description: Latitude (dd.dd) from 90 to -90
            east:
              type: number
              format: float
              example: 6.925
              minimum: -180
              maximum: 180
              description: Longitude (ddd.dd) from 180 to -180
            south:
              type: number
              format: float
              example: 50.708
              minimum: -90
              maximum: 90
              description: Latitude (dd.dd) from 90 to -90
            west:
              type: number
              format: float
              example: 0.755
              minimum: -180
              maximum: 180
              description: Longitude (ddd.dd) from 180 to -180
            inside:
              type: integer
              description: if you want to search inside the bbox or not 0 = normal; 1 = inside)
              default: '1'
            author_edmo:
              type: integer
              description: Only one value is possble, See [reference list autor_edmo](https://seadatanet-buffer5.maris.nl/api_v5.1/reference_list/author_edmo)
              example: 634
            author_edmo_country:
              type: integer
              description: Only one value is possble, See [reference list author_edmo_country](https://seadatanet-buffer5.maris.nl/api_v5.1/reference_list/author_edmo_country)
              example: 24
            originator_edmo:
              type: string
              description: if multiple options then use comma seperated values, See [reference list originator_edmo](https://seadatanet-buffer5.maris.nl/api_v5.1/reference_list/originator_edmo)
              example: '634'
            measuring_area_type_l02:
              type: string
              description: Only one value is possble, See [reference list measuring_area_type_L02](https://seadatanet-buffer5.maris.nl/api_v5.1/reference_list/measuring_area_type_l02)
              items:
                type: string
                enum:
                  - '3'
                  - '4'
                  - '6'
            parameters_p02:
              type: string
              description: if multiple options then use comma seperated values, See [reference list parameters_P02](https://seadatanet-buffer5.maris.nl/api_v5.1/reference_list/parameters_p02)
              example: aslv
            parameters_p03:
              type: string
              description: if multiple options then use comma seperated values, See [reference list parameters_P03](https://seadatanet-buffer5.maris.nl/api_v5.1/reference_list/parameters_p03)
              example: c045
            parameters_p08:
              type: string
              description: if multiple options then use comma seperated values, See [reference list parameters_p08](https://seadatanet-buffer5.maris.nl/api_v5.1/reference_list/parameters_p08)
              example: ds04
            custodium_edmo:
              type: string
              description: if multiple options then use comma seperated values, See [reference list custodium_edmo](https://seadatanet-buffer5.maris.nl/api_v5.1/reference_list/custodium_edmo)
              example: '634'
            distributor_edmo:
              type: string
              description: if multiple options then use comma seperated values, See [reference list distributor_edmo](https://seadatanet-buffer5.maris.nl/api_v5.1/reference_list/distributor_edmo)
              example: '634'
    MetadataQueryReturn:
      xml:
        name: MetadataQueryReturn
      type: object
      properties:
        records_found:
          type: integer
        result:
          type: array
          items:
            properties:
              '{response_field1}':
                type: string
              '{response_field2}':
                type: string
        you_search_for_translation:
          type: array
          items:
            properties:
              '{query_field1}':
                type: object
                properties:
                  '{SearchValue}':
                    type: string
              '{query_field2}':
                type: object
                properties:
                  '{SearchValue}':
                    type: string
                    description: "\r\n\t\t\tSearchFieldName is the field use search for<br>\r\n\t\t\tSearchValue is the calue you searched for<br>\r\n\t\t\tString is the translation for this value<br>\r\n\t\t\teg You search for 'water' in the field 'parameters_p02'<br>\r\n\t\t\tThe return is; SearchFieldName = 'parameters_p02'; SearchValue = 'water'; string = 'translation from value to string '\r\n\t\t\t"
        facet_search:
          type: array
          items:
            properties:
              '{facet_field1}':
                type: object
                properties:
                  description:
                    type: string
                  title:
                    type: string
                  field:
                    # Replaced type "{facet_field1}" with string... Not sure if correct
                    # type: '{facet_field1}'
                    type: string
                  number:
                    type: integer
                  steps:
                    type: array
                    items:
                      properties:
                        key:
                          type: string
                        text:
                          type: string
                        hits:
                          type: integer
              '{facet_field2}':
                type: object
                properties:
                  description:
                    type: string
                  title:
                    type: string
                  field:
                    # Replaced type "{facet_field1}" with string... Not sure if correct
                    # type: '{facet_field1}'
                    type: string 
                  number:
                    type: integer
                  steps:
                    type: array
                    items:
                      properties:
                        key:
                          type: string
                        text:
                          type: string
                        hits:
                          type: integer
        warnings:
          xml:
            name: Warnings
          type: object
          properties:
            warningNumber:
              type: integer
              description: The number of the warning
            warningMessage:
              type: string
              description: A short description of the warning
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: bearerToken
security: # Error: "Should be array". added "-" prefix 
   - bearerAuth: []
paths:
  /login:
    post:
      security: []
      tags:
        - Security
      summary: Normal login
      requestBody:
        description: Login to get a token; this token can only be used in this API;
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Login'
        required: true
      responses:
        '200':
          description: Your token
          content:
            application/json:
              schema:
                xml:
                  name: LoginReturn
                type: object
                properties:
                  token:
                    type: string
                    description: This bearer token is valid for the next (n) hours
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorsReturn'
        '401':
          description: Invalid token
  /status:
    get:
      security:
        - bearerAuth: []
      tags:
        - Info
      summary: Status
      responses:
        '200':
          description: Successful operation
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorsReturn'
        '401':
          description: Invalid token
  /reference_list/{outputType}:
    get:
      security:
        - bearerAuth: []
      tags:
        - Info
      summary: Reference_list
      parameters:
        - name: outputType
          in: path
          required: true
          schema:
            type: string
            enum:
              - html
              - json
      responses:
        '200':
          description: Successful operation
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorsReturn'
        '401':
          description: Invalid token
  /orderlist:
    get:
      security:
        - bearerAuth: []
      tags:
        - Orders
      summary: Show all your relevant orders from 30 days or less
      description: Returns a list of all your order not older then 30 days
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderListReturn'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorsReturn'
        '401':
          description: Invalid token
  /order/{orderNumber}:
    get:
      security:
        - bearerAuth: []
      tags:
        - Orders
      summary: Find order by Ordernumber
      description: Returns a single order including download if available
      parameters:
        - name: orderNumber
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderDetailsReturn'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorsReturn'
        '401':
          description: Invalid token
  /order/download/csv/{orderNumber}/{restriction}:
    get:
      security:
        - bearerAuth: []
      tags:
        - Orders
      summary: Download metadata CSV for this order
      description: Download the metadata in CSV format to get metadata for this order
      parameters:
        - name: orderNumber
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - name: restriction
          in: path
          required: true
          schema:
            type: string
            enum:
              - unrestricted
              - restricted
      responses:
        '200':
          description: The metadata from this order in CSV format zipped
          content:
            application/zip:
              schema:
                type: string
                format: binary
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorsReturn'
        '401':
          description: Invalid token
  /order/query:
    post:
      security:
        - bearerAuth: []
      tags:
        - Orders
      summary: Make an order by query
      description: Make an order from all requested records with specified fields
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderQuery'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderQueryReturn'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorsReturn'
        '401':
          description: Invalid token
  /metadata/query:
    post:
      security:
        - bearerAuth: []
      tags:
        - Metadata
      summary: Make a query and get the metadata back
      description: Make a query and recieve the results and also the facet search info returned
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MetadataQuery'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetadataQueryReturn'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorsReturn'
        '401':
          description: Invalid token
